
import 'package:carpio_boardingbuddy/screens/home_boarding_screen.dart';
import 'package:carpio_boardingbuddy/screens/home_screen.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:quickalert/quickalert.dart';

class CreateRoom extends StatefulWidget {
  const CreateRoom({super.key});

  @override
  State<CreateRoom> createState() => _CreateRoomState();
}

class _CreateRoomState extends State<CreateRoom> {
  var boardingNameController = TextEditingController();
  var roomNumController = TextEditingController();
  var addressController = TextEditingController();

  void createRoom() async {
    if (boardingNameController.text == '' ||
        roomNumController.text == '' ||
        addressController.text == '') {
      QuickAlert.show(
        context: context,
        type: QuickAlertType.error,
        title: 'Invalid Input',
      );
      return;
    }
    try {
      QuickAlert.show(
          context: context,
          type: QuickAlertType.loading,
          title: 'Registering Room...');

      var boardingCollection =
          FirebaseFirestore.instance.collection('boardings');

      var newDocRef = await boardingCollection.add({
        'boarding name': boardingNameController.text.trim(),
        'room number': roomNumController.text.trim(),
        'boarding address': addressController.text.trim(),
      });

      String autoGeneratedId = newDocRef.id;

      await newDocRef.update({'id': autoGeneratedId});

      final User? user = FirebaseAuth.instance.currentUser;
      final _uid = user?.uid;

      FirebaseFirestore.instance
          .collection('users')
          .doc(_uid)
          .update({'boarding id': autoGeneratedId});

      Navigator.of(context).pop();
      Navigator.of(context).pushReplacement(
        MaterialPageRoute(
          builder: (_) => const BoardingHouse(),
        ),
      );
    } catch (e) {
      QuickAlert.show(
          context: context,
          type: QuickAlertType.error,
          title: 'Error Registering Room');
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        leading: IconButton(
          onPressed: () {
            Navigator.of(context).pushReplacement(
              MaterialPageRoute(
                builder: (_) => HomeScreen(),
              ),
            );
          },
          icon: const Icon(Icons.arrow_back_ios),
        ),
        title: const Text('Create Room'),
        centerTitle: true,
      ),
      body: Padding(
        padding: const EdgeInsets.all(15.0),
        child: Column(
          children: [
            TextField(
              controller: boardingNameController,
              decoration: const InputDecoration(
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.all(
                    Radius.circular(13),
                  ),
                ),
                focusedBorder: OutlineInputBorder(
                  borderSide: BorderSide(
                    color: Colors.blue,
                    width: 2.0,
                  ),
                  borderRadius: BorderRadius.all(
                    Radius.circular(13),
                  ),
                ),
                labelStyle: TextStyle(
                  color: Colors.black,
                ),
                label: Text('Boarding Name'),
              ),
            ),
            const SizedBox(
              height: 15,
            ),
            TextField(
              controller: roomNumController,
              decoration: const InputDecoration(
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.all(
                    Radius.circular(13),
                  ),
                ),
                focusedBorder: OutlineInputBorder(
                  borderSide: BorderSide(
                    color: Colors.blue,
                    width: 2.0,
                  ),
                  borderRadius: BorderRadius.all(
                    Radius.circular(13),
                  ),
                ),
                labelStyle: TextStyle(
                  color: Colors.black,
                ),
                label: Text('Room Number'),
              ),
            ),
            const SizedBox(
              height: 15,
            ),
            TextField(
              controller: addressController,
              decoration: const InputDecoration(
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.all(
                    Radius.circular(13),
                  ),
                ),
                focusedBorder: OutlineInputBorder(
                  borderSide: BorderSide(
                    color: Colors.blue,
                    width: 2.0,
                  ),
                  borderRadius: BorderRadius.all(
                    Radius.circular(13),
                  ),
                ),
                labelStyle: TextStyle(
                  color: Colors.black,
                ),
                label: Text('Boarding Address'),
              ),
            ),
            const SizedBox(
              height: 15,
            ),
            SizedBox(
              height: 45,
              width: double.infinity,
              child: ElevatedButton(
                onPressed: () {
                  if (boardingNameController.text == '' ||
                      roomNumController.text == '' ||
                      addressController.text == '') {
                    QuickAlert.show(
                        context: context,
                        type: QuickAlertType.error,
                        title: 'Please input the required data',
                        text:
                            'Input boarding name, room number, and boarding address');
                  } else {
                    QuickAlert.show(
                      context: context,
                      type: QuickAlertType.info,
                      title: 'Create Room?',
                      text: 'Are you sure you want to create boarding room?',
                      showCancelBtn: true,
                      onCancelBtnTap: () {
                        Navigator.of(context).pop();
                      },
                      onConfirmBtnTap: () {
                        Navigator.of(context).pop();
                        createRoom();
                      },
                    );
                  }
                },
                style: ButtonStyle(
                  backgroundColor: MaterialStateProperty.all<Color>(
                    Colors.blue,
                  ),
                ),
                child: const Text(
                  'CREATE ROOM',
                  style: TextStyle(
                    fontSize: 20,
                    color: Colors.white,
                  ),
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }
}
